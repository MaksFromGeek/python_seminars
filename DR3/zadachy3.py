# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N]. 
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# В последующих строках записаны N целых чисел Ai. Последняя строка содержит число X
# пример
# 5
# 1 2 3 4 5
# 3
# -> 1

# n = int(input('Введите длину массива: '))
# x = int(input ('Введите искомое число: '))
# m = 0
# for i in range(1,n+1):
#     print(i, end = ' ')
#     if x == i:
#         m += 1
# print(f'Число {x} в нашем массиве встречается {m} раз')


# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X. 
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# В последующих строках записаны N целых чисел Ai. Последняя строка содержит число X
# пример
# 5
# 1 2 3 4 5
# 6
# -> 5

n = list(map(int, input('Введите ч/з пробел количество элементов в массиве: ').strip().split()))
x = int(input('Введите число Х: ').strip())

res = n[0]
print(n, end = ' ')
for i in n: 
    if abs(i - x) < abs(res - x): # 1-9=8, 1-9=8; 2-9=7, 1-9=8; 3-9=6, 2-9=7; 4-9=5, 3-9=6; 5-9=4, 4-9=5;
        res = i                   # 1; 2; 3; 4; 5
print(f'ближайшим к числу {x} будет число {res}')


# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. 
# В случае с английским алфавитом очки распределяются так:

# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.
# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость введенного пользователем слова. 
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские, 
# либо только русские буквы.
# пример: Ввод: ноутбук; Вывод: 12

import re
def isCyrillic(text):
	return bool(re.search('[а-яА-Я]', text))
points_en = {1:'AEIOULNSTR',
      	2:'DG',
      	3:'BCMP',
      	4:'FHVWY',
      	5:'K',
      	8:'JZ',
      	10:'QZ'}
points_ru = {1:'АВЕИНОРСТ',
      	2:'ДКЛМПУ',
      	3:'БГЁЬЯ',
      	4:'ЙЫ',
      	5:'ЖЗХЦЧ',
        8:'ШЭЮ',
      	10:'ФЩЪ'}
text = input('Введите слово на русском или английском языках').upper()
if isCyrillic(text):
	print(f'вы набрали {sum([k for i in text for k, v in points_ru.items() if i in v])} очков')
else:
	print(f'you scored {sum([k for i in text for k, v in points_en.items() if i in v])} points')


# Регулярками называются шаблоны, которые используются для поиска соответствующего фрагмента текста и 
# сопоставления символов. Грубо говоря, у нас есть input-поле, в которое должен вводиться email-адрес. 
# Но пока мы не зададим проверку валидности введённого email-адреса, в этой строке может оказаться 
# совершенно любой набор символов, а нам это не нужно. Чтобы выявить ошибку при вводе некорректного 
# адреса электронной почты, можно использовать следующее регулярное выражение:
# r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)+$'